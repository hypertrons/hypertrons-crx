# release-deploy.yml
# release a version then deploy it to the store when a workflow_dispatch is triggered
name: release-deploy

on: 
  workflow_dispatch:

jobs:
  release-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          cache: "yarn"

      - name: Conventional Changelog Action
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-on-empty: 'false'
          pre-commit: scripts/pre-commit.cjs
          git-message: 'chore(release): {version}'

      - name: Build
        run: |
          yarn install
          yarn run build

      - name: zip to hypercrx.zip
        run: zip release/hypercrx.zip -r build/*

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release/hypercrx.*"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.changelog.outputs.tag }}
          generateReleaseNotes: true

      - name: Deploy
        run: |
          yarn run deploy
        env:
          CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
          CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
          CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
          EDGE_PRODUCT_ID: ${{ secrets.EDGE_PRODUCT_ID }}
          EDGE_CLIENT_ID: ${{ secrets.EDGE_CLIENT_ID }}
          EDGE_CLIENT_SECRET: ${{ secrets.EDGE_CLIENT_SECRET }}
          EDGE_ACCESS_TOKEN_URL: ${{ secrets.EDGE_ACCESS_TOKEN_URL }}
